{
  "name": "toposort-class",
  "version": "0.3.1",
  "description": "Topological sort of directed acyclic graphs (like dependecy lists)",
  "main": "./toposort.js",
  "devDependencies": {
    "requirejs": "~2.1.10",
    "chai": "~1.8.1",
    "grunt": "~0.4.2",
    "grunt-jscs-checker": "~0.4.1",
    "grunt-contrib-jshint": "~0.8.0",
    "grunt-mocha-test": "~0.8.2",
    "grunt-mocha": "~0.4.9"
  },
  "scripts": {
    "test": "grunt"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/gustavohenke/toposort.git"
  },
  "keywords": [
    "topological",
    "sort",
    "sorting",
    "graphs",
    "graph",
    "dependency",
    "list",
    "dependencies",
    "acyclic",
    "browser"
  ],
  "author": "",
  "license": "MIT",
  "readmeFilename": "README.md",
  "readme": "# Toposort [![Build Status](https://travis-ci.org/gustavohenke/toposort.png?branch=master)](https://travis-ci.org/gustavohenke/toposort) [![Dependency Status](https://gemnasium.com/gustavohenke/toposort.png)](https://gemnasium.com/gustavohenke/toposort)\r\n__Sorting directed acyclic graphs, for Node.js and  the browser__\r\n_This was originally done by Marcel Klehr. [Why not checkout his original repo?](https://github.com/marcelklehr/toposort)_\r\n\r\n## Installation\r\nThere are a few ways for installing Toposort. Here are them:\r\n\r\n* Via NPM: `npm install toposort-class`\r\n* Via Bower: `bower install toposort`\r\n* Via Git: `git clone git://github.com/gustavohenke/toposort.git`\r\n* [Direct download](https://raw.github.com/gustavohenke/toposort/master/toposort.js) for use in the browser\r\n\r\n## Example\r\nLet's say you have the following dependency graph:\r\n\r\n* Plugin depends on Backbone and jQuery UI Button;\r\n* Backbone depends on jQuery and Underscore;\r\n* jQuery UI Button depends on jQuery UI Core and jQuery UI Widget;\r\n* jQuery UI Widget and jQuery UI Core depend on jQuery;\r\n* jQuery and Underscore don't depend on anyone.\r\n\r\nNow, how would you sort this in a way that each asset will be correctly placed? You'll probably need the following sorting:\r\n\r\n* `jQuery`, `jQuery UI Core`, `jQuery UI Widget`, `jQuery UI Button`, `Underscore`, `Backbone`, `Plugin`\r\n\r\nYou can achieve it with the following code, using `toposort-class`:\r\n```javascript\r\nvar Toposort = require('toposort-class'),\r\n\tt = new Toposort();\r\n\r\nt.add(\"jquery-ui-core\", \"jquery\")\r\n .add(\"jquery-ui-widget\", \"jquery\")\r\n .add(\"jquery-ui-button\", [\"jquery-ui-core\", \"jquery-ui-widget\"])\r\n .add(\"plugin\", [\"backbone\", \"jquery-ui-button\"])\r\n .add(\"backbone\", [\"underscore\", \"jquery\"]);\r\n\r\nconsole.log(t.sort().reverse());\r\n\r\n/* Will output:\r\n * ['jquery', 'jquery-ui-core', 'jquery-ui-widget', 'jquery-ui-button', 'underscore', 'backbone', 'plugin']\r\n *\r\n * And you're done.\r\n */\r\n```\r\n\r\n## API\r\nFirst of all:\r\n```javascript\r\nvar Toposort = require('toposort-class'),\r\n\tt = new Toposort();\r\n\r\n// If you prefer, you can do this way also:\r\nt = new require('toposort-class').Toposort();\r\n```\r\n\r\n### .add(item, deps)\r\n* _{String}_ `item` - The name of the dependent item that is being added\r\n* _{Array|String}_ `deps` - A dependency or list of dependencies of `item`\r\n\r\n__Returns:__ _{Toposort}_ The Toposort instance, for chaining.\r\n\r\n### .sort()\r\n__Returns:__ _{Array}_ The list of dependencies topologically sorted.\r\n\r\nThis method will check for cyclic dependencies, like \"A is dependent of A\".\r\n\r\n## Legal\r\nMIT License\r\n",
  "bugs": {
    "url": "https://github.com/gustavohenke/toposort/issues"
  },
  "homepage": "https://github.com/gustavohenke/toposort",
  "_id": "toposort-class@0.3.1",
  "_from": "toposort-class@~0.3.0"
}
