{
  "name": "watchr",
  "version": "2.4.11",
  "description": "Better file system watching for Node.js",
  "homepage": "https://github.com/bevry/watchr",
  "license": {
    "type": "MIT"
  },
  "badges": {
    "travis": true,
    "npm": true,
    "david": true,
    "daviddev": true,
    "gittip": "bevry",
    "flattr": "344188/balupton-on-Flattr",
    "paypal": "QB8GQPZAH84N6",
    "bitcoin": "https://coinbase.com/checkouts/9ef59f5479eec1d97d63382c9ebcb93a",
    "wishlist": "http://amzn.com/w/2F8TXKSNAFG4V"
  },
  "keywords": [
    "watching",
    "watch",
    "fswatcher",
    "watchfile",
    "fs"
  ],
  "author": {
    "name": "2012+ Bevry Pty Ltd",
    "email": "us@bevry.me",
    "url": "http://bevry.me"
  },
  "maintainers": [
    {
      "name": "Benjamin Lupton",
      "email": "b@lupton.cc",
      "url": "http://balupton.com"
    }
  ],
  "contributors": [
    {
      "name": "AaronO",
      "url": "https://github.com/AaronO"
    },
    {
      "name": "adamsanderson",
      "url": "https://github.com/adamsanderson"
    },
    {
      "name": "balupton",
      "url": "https://github.com/balupton"
    },
    {
      "name": "Casey Foster",
      "url": "https://github.com/caseywebdev"
    },
    {
      "name": "FredrikNoren",
      "url": "https://github.com/FredrikNoren"
    },
    {
      "name": "Robson Roberto Souza Peixoto",
      "email": "robsonpeixoto@gmail.com",
      "url": "https://github.com/robsonpeixoto"
    }
  ],
  "bugs": {
    "url": "https://github.com/bevry/watchr/issues"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/bevry/watchr.git"
  },
  "engines": {
    "node": ">=0.4"
  },
  "dependencies": {
    "bal-util": "~2.4.1",
    "typechecker": "~2.0.8",
    "extendr": "~2.1.0",
    "eachr": "~2.0.2",
    "safefs": "~3.1.1",
    "taskgroup": "~3.3.8",
    "ignorefs": "~1.0.0",
    "extract-opts": "~2.2.0"
  },
  "devDependencies": {
    "coffee-script": "~1.7.1",
    "joe": "~1.3.2",
    "joe-reporter-console": "~1.2.1",
    "projectz": "~0.3.10"
  },
  "directories": {
    "lib": "./out/lib"
  },
  "bin": {
    "watchr": "./bin/watchr"
  },
  "scripts": {
    "test": "node ./out/test/watchr-test.js"
  },
  "main": "./out/lib/watchr.js",
  "readme": "# Watchr â€” better file system watching for Node.js\n\n<!-- BADGES/ -->\n\n[![Build Status](http://img.shields.io/travis-ci/bevry/watchr.png?branch=master)](http://travis-ci.org/bevry/watchr \"Check this project's build status on TravisCI\")\n[![NPM version](http://badge.fury.io/js/watchr.png)](https://npmjs.org/package/watchr \"View this project on NPM\")\n[![Dependency Status](https://david-dm.org/bevry/watchr.png?theme=shields.io)](https://david-dm.org/bevry/watchr)\n[![Development Dependency Status](https://david-dm.org/bevry/watchr/dev-status.png?theme=shields.io)](https://david-dm.org/bevry/watchr#info=devDependencies)<br/>\n[![Gittip donate button](http://img.shields.io/gittip/bevry.png)](https://www.gittip.com/bevry/ \"Donate weekly to this project using Gittip\")\n[![Flattr donate button](http://img.shields.io/flattr/donate.png?color=yellow)](http://flattr.com/thing/344188/balupton-on-Flattr \"Donate monthly to this project using Flattr\")\n[![PayPayl donate button](http://img.shields.io/paypal/donate.png?color=yellow)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=QB8GQPZAH84N6 \"Donate once-off to this project using Paypal\")\n[![BitCoin donate button](http://img.shields.io/bitcoin/donate.png?color=yellow)](https://coinbase.com/checkouts/9ef59f5479eec1d97d63382c9ebcb93a \"Donate once-off to this project using BitCoin\")\n[![Wishlist browse button](http://img.shields.io/wishlist/browse.png?color=yellow)](http://amzn.com/w/2F8TXKSNAFG4V \"Buy an item on our wishlist for us\")\n\n<!-- /BADGES -->\n\n\nWatchr provides a normalised API the file watching APIs of different node versions, nested/recursive file and directory watching, and accurate detailed events for file/directory creations, updates, and deletions.\n\nWatchr is made to be a module that other tools include. If you are looking for a command line tool to perform actions when files are changed, check out [Watchy](https://github.com/caseywebdev/watchy).\n\nYou install it via `npm install watchr` and use it via `require('watchr').watch(config)`. Available configuration options are:\n\n- `path` a single path to watch\n- `paths` an array of paths to watch\n- `listener` a single change listener to fire when a change occurs\n- `listeners` an array of listeners to fire when a change occurs, overloaded to accept the following values:\n\t- `changeListener` a single change listener\n\t- `[changeListener]` an array of change listeners\n\t- `{eventName:eventListener}` an object keyed with the event names and valued with a single event listener\n\t- `{eventName:[eventListener]}` an object keyed with the event names and valued with an array of event listeners\n- `next` (optional, defaults to `null`) a completion callback to fire once the watchers have been setup, arguments are:\n\t- when using the `path` configuration option: `err, watcherInstance`\n\t- when using the `paths` configuration option: `err, [watcherInstance,...]` \n- `stat` (optional, defaults to `null`) a file stat object to use for the path, instead of fetching a new one\n- `interval` (optional, defaults to `5007`) for systems that poll to detect file changes, how often should it poll in millseconds\n- `persistent` (optional, defaults to `true`) whether or not we should keep the node process alive for as long as files are still being watched\n- `catchupDelay` (optional, defaults to `2000`) because swap files delete the original file, then rename a temporary file over-top of the original file, to ensure the change is reported correctly we must have a delay in place that waits until all change events for that file have finished, before starting the detection of what changed\n- `preferredMethods` (optional, defaults to `['watch','watchFile']`) which order should we prefer our watching methods to be tried?\n- `followLinks` (optional, defaults to `true`) follow symlinks, i.e. use stat rather than lstat\n- `ignorePaths` (optional, defaults to `false`) an array of full paths to ignore\n- `ignoreHiddenFiles` (optional, defaults to `false`) whether or not to ignored files which filename starts with a `.`\n- `ignoreCommonPatterns` (optional, defaults to `true`) whether or not to ignore common undesirable file patterns (e.g. `.svn`, `.git`, `.DS_Store`, `thumbs.db`, etc)\n- `ignoreCustomPatterns` (optional, defaults to `null`) any custom ignore patterns that you would also like to ignore along with the common patterns\n\nThe following events are available to your via the listeners:\n\n- `log` for debugging, receives the arguments `logLevel ,args...`\n- `error` for gracefully listening to error events, receives the arguments `err`\n\t- you should always have an error listener, otherwise node.js's behavior is to throw the error and possibly crash your application, see [#40](https://github.com/bevry/watchr/issues/40)\n- `watching` for when watching of the path has completed, receives the arguments `err, isWatching`\n- `change` for listening to change events, receives the arguments `changeType, fullPath, currentStat, previousStat`, received arguments will be:\n\t- for updated files: `'update', fullPath, currentStat, previousStat`\n\t- for created files: `'create', fullPath, currentStat, null`\n\t- for deleted files: `'delete', fullPath, null, previousStat`\n\n\nTo wrap it all together, it would look like this:\n\n``` javascript\n// Require\nvar watchr = require('watchr');\n\n// Watch a directory or file\nconsole.log('Watch our paths');\nwatchr.watch({\n\tpaths: ['path1','path2','path3'],\n\tlisteners: {\n\t\tlog: function(logLevel){\n\t\t\tconsole.log('a log message occured:', arguments);\n\t\t},\n\t\terror: function(err){\n\t\t\tconsole.log('an error occured:', err);\n\t\t},\n\t\twatching: function(err,watcherInstance,isWatching){\n\t\t\tif (err) {\n\t\t\t\tconsole.log(\"watching the path \" + watcherInstance.path + \" failed with error\", err);\n\t\t\t} else {\n\t\t\t\tconsole.log(\"watching the path \" + watcherInstance.path + \" completed\");\n\t\t\t}\n\t\t},\n\t\tchange: function(changeType,filePath,fileCurrentStat,filePreviousStat){\n\t\t\tconsole.log('a change event occured:',arguments);\n\t\t}\n\t},\n\tnext: function(err,watchers){\n\t\tif (err) {\n\t\t\treturn console.log(\"watching everything failed with error\", err);\n\t\t} else {\n\t\t\tconsole.log('watching everything completed', watchers);\n\t\t}\n\n\t\t// Close watchers after 60 seconds\n\t\tsetTimeout(function(){\n\t\t\tvar i;\n\t\t\tconsole.log('Stop watching our paths');\n\t\t\tfor ( i=0;  i<watchers.length; i++ ) {\n\t\t\t\twatchers[i].close();\n\t\t\t}\n\t\t},60*1000);\n\t}\n});\n```\n\nYou can test the above code snippet by running the following:\n\n```\nnpm install -g watchr\nwatchr\n```\n\n\n<!-- HISTORY/ -->\n\n## History\n[Discover the change history by heading on over to the `HISTORY.md` file.](https://github.com/bevry/watchr/blob/master/HISTORY.md#files)\n\n<!-- /HISTORY -->\n\n\n<!-- CONTRIBUTE/ -->\n\n## Contribute\n\n[Discover how you can contribute by heading on over to the `CONTRIBUTING.md` file.](https://github.com/bevry/watchr/blob/master/CONTRIBUTING.md#files)\n\n<!-- /CONTRIBUTE -->\n\n\n<!-- BACKERS/ -->\n\n## Backers\n\n### Maintainers\n\nThese amazing people are maintaining this project:\n\n- Benjamin Lupton <b@lupton.cc> (http://balupton.com)\n\n### Sponsors\n\nNo sponsors yet! Will you be the first?\n\n[![Gittip donate button](http://img.shields.io/gittip/bevry.png)](https://www.gittip.com/bevry/ \"Donate weekly to this project using Gittip\")\n[![Flattr donate button](http://img.shields.io/flattr/donate.png?color=yellow)](http://flattr.com/thing/344188/balupton-on-Flattr \"Donate monthly to this project using Flattr\")\n[![PayPayl donate button](http://img.shields.io/paypal/donate.png?color=yellow)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=QB8GQPZAH84N6 \"Donate once-off to this project using Paypal\")\n[![BitCoin donate button](http://img.shields.io/bitcoin/donate.png?color=yellow)](https://coinbase.com/checkouts/9ef59f5479eec1d97d63382c9ebcb93a \"Donate once-off to this project using BitCoin\")\n[![Wishlist browse button](http://img.shields.io/wishlist/browse.png?color=yellow)](http://amzn.com/w/2F8TXKSNAFG4V \"Buy an item on our wishlist for us\")\n\n### Contributors\n\nThese amazing people have contributed code to this project:\n\n- [AaronO](https://github.com/AaronO) â€” [view contributions](https://github.com/bevry/watchr/commits?author=AaronO)\n- [adamsanderson](https://github.com/adamsanderson) â€” [view contributions](https://github.com/bevry/watchr/commits?author=adamsanderson)\n- [balupton](https://github.com/balupton) â€” [view contributions](https://github.com/bevry/watchr/commits?author=balupton)\n- [Casey Foster](https://github.com/caseywebdev) â€” [view contributions](https://github.com/bevry/watchr/commits?author=caseywebdev)\n- [FredrikNoren](https://github.com/FredrikNoren) â€” [view contributions](https://github.com/bevry/watchr/commits?author=FredrikNoren)\n- [Robson Roberto Souza Peixoto](https://github.com/robsonpeixoto) <robsonpeixoto@gmail.com> â€” [view contributions](https://github.com/bevry/watchr/commits?author=robsonpeixoto)\n\n[Become a contributor!](https://github.com/bevry/watchr/blob/master/CONTRIBUTING.md#files)\n\n<!-- /BACKERS -->\n\n\n<!-- LICENSE/ -->\n\n## License\n\nLicensed under the incredibly [permissive](http://en.wikipedia.org/wiki/Permissive_free_software_licence) [MIT license](http://creativecommons.org/licenses/MIT/)\n\nCopyright &copy; 2012+ Bevry Pty Ltd <us@bevry.me> (http://bevry.me)\n<br/>Copyright &copy; 2011 Benjamin Lupton <b@lupton.cc> (http://balupton.com)\n\n<!-- /LICENSE -->\n\n\n",
  "readmeFilename": "README.md",
  "_id": "watchr@2.4.11",
  "dist": {
    "shasum": "ad0ac83cafe4a198670df9c313715481674e6674"
  },
  "_from": "watchr@~2.4.11",
  "_resolved": "https://registry.npmjs.org/watchr/-/watchr-2.4.11.tgz"
}
